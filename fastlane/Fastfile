# Customise this file, documentation can be found here:
# https://github.com/KrauseFx/fastlane/tree/master/docs
# All available actions: https://github.com/KrauseFx/fastlane/blob/master/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# By default, fastlane will send which actions are used
# No personal data is shared, more information on https://github.com/fastlane/enhancer
# Uncomment the following line to opt out
# opt_out_usage

# If you want to automatically update fastlane if a new version is available:
#update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.47.0"

default_platform :ios


platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."

    # increment_build_number

#    scan(
#        project: "SlackerReferenceApp/platforms/ios/SlackerReferenceApp.xcodeproj",
#        scheme: "SlackerReferenceApp",
#        device: "iPhone 6",
#        clean: true,
#        code_coverage: true,
#        output_directory: "SlackerReferenceApp/platforms/ios/build",
#        slack_url: "https://hooks.slack.com/services/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",
#        slack_channel: "internationalmixmob"
#    )
  end

  desc "Runs all the tests"
  lane :test do
    xctool :test, [
      "--project", "'./SlackerReferenceApp/platforms/ios/SlackerReferenceApp.xcodeproj'",
    #  "--scheme", "'SlackerReferenceApp'",
      "--configuration", "Debug",
      "--sdk", "iphonesimulator",
      "--arch", "i386",
      "OBJROOT=./SlackerReferenceApp/platforms/ios/build",
      "ONLY_ACTIVE_ARCH=NO GCC_INSTRUMENT_PROGRAM_FLOW_ARCS=YES GCC_GENERATE_TEST_COVERAGE_FILES=YES"
    ].join(" ")

  end

  desc "Create a Build"
  desc "This will also make sure the profile is up to date"
  lane :build do
    cert
    sigh(
      adhoc: true
    )
    gym(
      project: "SlackerReferenceApp/platforms/ios/SlackerReferenceApp.xcodeproj",
      scheme: "SlackerReferenceApp",
      output_directory: "SlackerReferenceApp/platforms/ios/build",
      output_name: "SlackerDemo.ipa",
      use_legacy_build_api: true
    ) # Build your app - more options available
    #pilot

    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new version to the App Store"
  lane :deploy do
    # snapshot
    sigh
    gym(scheme: "SlackerReferenceApp") # Build your app - more options available
    # deliver(force: true)
    # frameit
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end



# More information about multiple platforms in fastlane: https://github.com/KrauseFx/fastlane/blob/master/docs/Platforms.md
# All available actions: https://github.com/KrauseFx/fastlane/blob/master/docs/Actions.md
